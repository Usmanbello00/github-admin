[
  {
    "question": "You have subscribed to GitHub Premium Support, and you need to submit a support ticket. GitHub Premium Support can help you with:",
    "options": [
      "writing scripts.",
      "installing GitHub Enterprise Server.",
      "setting up hardware.",
      "integrating with third-party applications."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 1"
  },
  {
    "question": "You need to contact GitHub Premium Support. What are valid reasons for submitting a support ticket? (Each answer presents a complete solution. Choose two.)",
    "options": [
      "license renewal",
      "hardware setup issues or errors",
      "business impact from security issues within your organization",
      "outages on GitHub.com affecting core Git functionality"
    ],
    "correctAnswers": [
      2,
      3
    ],
    "topic": "Topic 1"
  },
  {
    "question": "Which of the following is a key benefit of using GitHub Marketplace Apps in an enterprise?",
    "options": [
      "They guarantee no downtime during enterprise GitHub maintenance windows",
      "They often include integrations with external services, reducing the need for custom code",
      "Apps eliminate the need for GitHub Actions entirely",
      "All apps come pre-approved by GitHub's internal security team"
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 1"
  },
  {
    "question": "You need to create a support bundle for your GitHub Enterprise Server instance with the hostname ghe.avocado.corp. What command should you use to create a support bundle?",
    "options": [
      "ssh -p 122 admin@ghe.avocado.corp -- 'ghe-support-bundle -o' > support-bundle.tgz",
      "ssh -p 122 admin@ghe.avocado.corp â€“ 'ghe-diagnostics' > support-bundle.tgz",
      "curl -u admin https://ghe.avocado.corp/diagnostics/support-bundle.tgz -o",
      "ssh -p 122 admin@ghe.avocado.corp -- 'ghe-config generate-support-bundle' > support-bundle.tgz"
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 1"
  },
  {
    "question": "What do you need to successfully generate a support bundle on a GitHub Enterprise Server?",
    "options": [
      "Approval from GitHub Support",
      "A custom GitHub Action in the root repo",
      "Administrator SSH access to the appliance",
      "A GitHub App with read:org permissions"
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 1"
  },
  {
    "question": "A financial services company is evaluating GitHub account types. Which of the following is a key distinction between GitHub Enterprise Managed Users and Personal Accounts?",
    "options": [
      "Enterprise Managed Users can collaborate across both personal and enterprise repositories.",
      "Personal Accounts are owned by users and can be used for both personal and professional work.",
      "Personal Accounts provide stricter control over repositories and user activity.",
      "Enterprise Managed Users require the organization to manage their own authentication server."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 2"
  },
  {
    "question": "Which THREE of the following accurately describe how the SCIM protocol enhances user management in GitHub Enterprise Cloud? (Choose three.)",
    "options": [
      "SCIM synchronizes changes to user attributes from the identity provider to GitHub.",
      "SCIM deactivates GitHub accounts when users are deleted from the identity provider.",
      "SCIM automatically deletes organization repositories when administrators are removed.",
      "SCIM automates user provisioning when new users are added to the identity provider.",
      "SCIM generates authentication tokens for accessing GitHub's REST API.",
      "SCIM configures repository permissions based on user roles within the organization."
    ],
    "correctAnswers": [
      0,
      1,
      3
    ],
    "topic": "Topic 2"
  },
  {
    "question": "When comparing a partner identity provider integration with a non-partner identity management solution for GitHub Enterprise Managed Users, which statement is Correct?",
    "options": [
      "The non-partner identity provider integrations can utilize OIDC for authentication.",
      "The non-partner identity provider integrations require manual configuration of SAML 2.0 details.",
      "The partner identity provider integrations support fewer GitHub-supported authentication methods.",
      "The partner identity provider integrations rely on the partner to support the application on the partner IdP."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 2"
  },
  {
    "question": "When comparing Group SCIM to Team Sync for identity management in GitHub Enterprise, which statement is Correct?",
    "options": [
      "Group SCIM requires less initial configuration than Team Sync.",
      "Team Sync supports more identity providers than Group SCIM.",
      "Team Sync provides more automated user deprovisioning than Group SCIM.",
      "Group SCIM enables centralized user and group management through the IdP."
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 2"
  },
  {
    "question": "Why is a GitHub App preferred over a PAT for machine authentication?",
    "options": [
      "GitHub Apps are required to pass SAML assertions",
      "GitHub Apps have time-limited installation tokens with scoped access",
      "PATs cannot be used in GitHub Actions",
      "PATs support fewer GitHub APIs than Apps"
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 2"
  },
  {
    "question": "You are planning GitHub account management for a healthcare organization with strict compliance requirements. Which THREE of the following statements accurately describe GitHub Enterprise Managed Users (EMU) accounts? (Choose three.)",
    "options": [
      "EMU accounts can be used for both personal and enterprise repositories.",
      "EMU accounts are managed through an identity provider such as Azure AD.",
      "EMU accounts allow users to create and manage their own credentials.",
      "EMU accounts restrict users to enterprise-related activities only.",
      "EMU accounts are created and managed by individual users.",
      "EMU accounts are owned by the organization and cannot be unlinked."
    ],
    "correctAnswers": [
      1,
      3,
      5
    ],
    "topic": "Topic 2"
  },
  {
    "question": "A GitHub Enterprise administrator is planning to implement SAML SSO across their company. Which of the following correctly distinguishes enterprise-wide SAML SSO from organization-level SAML SSO?",
    "options": [
      "Enterprise-wide SAML SSO requires less initial administrative overhead than organization-level implementation.",
      "Enterprise-wide SAML SSO allows different organizations to use different authentication methods.",
      "Enterprise-wide SAML SSO immediately removes users who fail to authenticate via the IdP.",
      "Enterprise-wide SAML SSO ensures users authenticate through the same IdP across all organizations."
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 2"
  },
  {
    "question": "What distinguishes Enterprise Managed Users (EMUs) from standard GitHub accounts?",
    "options": [
      "EMUs are fully controlled by an IdP and cannot log in with personal credentials",
      "EMUs can only be created using email invites",
      "EMUs are managed in GitHub and use GitHub authentication",
      "EMUs are only available for GitHub Enterprise Server"
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 2"
  },
  {
    "question": "Your organization is implementing team synchronization. Which of the following should you prioritize during the setup process?",
    "options": [
      "Disabling the audit log stream",
      "Setting an infrequent sync schedule to reduce performance impact",
      "Allowing manual updates to team memberships",
      "Clearly define how identity provider groups will align with GitHub teams and roles"
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 2"
  },
  {
    "question": "What makes GitHub Apps a more secure choice for automation over OAuth Apps?",
    "options": [
      "GitHub Apps always require two-factor authentication.",
      "GitHub Apps can only be installed by organization owners.",
      "GitHub Apps are limited to read-only access and cannot write to repositories.",
      "GitHub Apps authenticate as an app with fine-grained permissions, not as a user."
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 2"
  },
  {
    "question": "Why would a GitHub App be favored over a machine account for automation tasks?",
    "options": [
      "Machine accounts are required for webhook delivery.",
      "GitHub Apps provide a higher rate limit ceiling than using a personal access token on a machine account, when they use an install token and are owned by a GitHub Enterprise Cloud licensed enterprise.",
      "GitHub Apps are limited to a single repository.",
      "Machine accounts are easier to audit than GitHub Apps."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 2"
  },
  {
    "question": "When comparing fine-grained Personal Access Tokens (PATs) with classic PATs, which of the following statements is accurate?",
    "options": [
      "Fine-grained PATs automatically renew while classic PATs require manual renewal.",
      "Fine-grained PATs permissions can be scoped to specific repositories.",
      "Classic PATs offer more permission controls than fine-grained PATs.",
      "Classic PATs can be restricted to specific organizations, but fine-grained PATs cannot."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 2"
  },
  {
    "question": "What is the new capability of GitHub's billing dashboard?",
    "options": [
      "Automatically removes unused users from billing",
      "Enables tracking of GitHub Copilot usage by user",
      "Allows self-service plan upgrades",
      "Offers real-time Slack alerts for billing overages"
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 3"
  },
  {
    "question": "What is a key characteristic of GitHub Enterprise Server (GHES) compared to GitHub Enterprise Cloud (GHEC)?",
    "options": [
      "GHES is hosted by GitHub and offers automatic scaling, while GHEC requires self-hosting.",
      "GHEC offers data residency options in regions that GHES does not support.",
      "GHES allows enterprises to have complete control over their hosting environment, including data storage and network security policies.",
      "GHES users cannot integrate with external identity providers for authentication."
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 3"
  },
  {
    "question": "Your organization wants to reduce costs. Which of the following actions should you take?",
    "options": [
      "Grant all users admin permissions",
      "Remove all outside collaborators",
      "Regularly audit for inactive users",
      "Disable SAML SSO for members"
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 3"
  },
  {
    "question": "How does metered billing work in GitHub Enterprise Cloud with Enterprise Managed Users (EMU)?",
    "options": [
      "Billing is based on number of total users in the enterprise",
      "Billing is based on owners and members of GitHub organizations",
      "Billing is based on total users in the enterprise that are not dormant",
      "Billing is based on the number of users created in Azure AD"
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 3"
  },
  {
    "question": "A team member is unable to push to a repository due to a 403-error related to branch protection. What should the GitHub Enterprise administrator do first?",
    "options": [
      "Remove the user from the team and re-add them",
      "Check the user's permissions and rulesets applied to the branch",
      "Raise a GitHub Support request for permissions issues",
      "Revert the branch to an earlier state"
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 4"
  },
  {
    "question": "Which of the following is true about outside collaborators in a GitHub organization?",
    "options": [
      "They are granted explicit access to specific repositories.",
      "They inherit organization-wide policies, such as SSO requirements.",
      "They have access to all private repositories by default.",
      "They appear in the organization's internal member list."
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 4"
  },
  {
    "question": "Which of the following is a benefit of creating a new GitHub organization?",
    "options": [
      "Automatic inheritance of policies from other organizations.",
      "Reduced administrative overhead.",
      "Clear separation of repos, projects, teams, billing, and organization-specific policies.",
      "Simplified collaboration across all organizations."
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 4"
  },
  {
    "question": "Which of the following is the responsibility of an Organization Owner in GitHub? (Choose three.)",
    "options": [
      "View and manage organization billing information.",
      "Create repositories without approval from other members.",
      "Manage organization settings, such as configuration and default permissions.",
      "Access repositories only if explicitly granted by a team maintainer."
    ],
    "correctAnswers": [
      0,
      1,
      2
    ],
    "topic": "Topic 4"
  },
  {
    "question": "Which of the following actions can a user with Write permissions perform in a GitHub repository?",
    "options": [
      "Manage repository settings, such as labels and GitHub Pages.",
      "Push code to non-protected branches.",
      "Configure branch protection rules.",
      "Delete the repository."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 4"
  },
  {
    "question": "Which of the following is a key benefit of setting default read permissions across organizations?",
    "options": [
      "Suits environments where all users need write access.",
      "Improves collaboration by allowing users to modify content directly.",
      "Increases efficiency in content creation and updates.",
      "Enhances security by minimizing unintended modifications."
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 4"
  },
  {
    "question": "Which of the following is the responsibility of a Team Maintainer in a GitHub organization? (Choose two.)",
    "options": [
      "Modifying organization-wide settings.",
      "Managing nested sub-teams.",
      "Adding or removing team members.",
      "Deleting repositories assigned to the team."
    ],
    "correctAnswers": [
      1,
      2
    ],
    "topic": "Topic 4"
  },
  {
    "question": "You are managing a repository in your organization's GitHub account. A team member asks you to confirm who has access to the repository and their permission levels. Which tool should you use to review and manage repository access?",
    "options": [
      "GitHub Pages Settings.",
      "GitHub Actions Logs.",
      "Repository Settings > Manage Access.",
      "Branch Protection Rules."
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 4"
  },
  {
    "question": "When a user becomes a member of multiple GitHub organizations, which THREE of the following are important considerations for administrators? (Choose three.)",
    "options": [
      "The user will automatically have the same role across all organizations.",
      "The user's repository access and/or team membership needs to be managed separately for each organization.",
      "The user will need to authorize credentials separately for each SAML-enabled organization.",
      "The user will have different permission levels in each organization.",
      "The user's profile information becomes private to non-organization members.",
      "The user's personal repositories will become accessible to all organizations."
    ],
    "correctAnswers": [
      1,
      2,
      3
    ],
    "topic": "Topic 4"
  },
  {
    "question": "A token was used to access an organization's resource via API. What fields in the audit log help determine who used it?",
    "options": [
      "The token's permissions and the geographic region of access",
      "The token expiration date",
      "The GitHub Actions runner name",
      "The token ID, requesting IP address, and associated user"
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 5"
  },
  {
    "question": "What will happen if Dependabot discovers a vulnerable transitive dependency in a repository?",
    "options": [
      "It creates a pull request to update the direct dependency to a version that resolves the vulnerability.",
      "It opens a pull request to update the affected package directly, regardless of version compatibility.",
      "It automatically removes the package from the repository.",
      "It sends an email to the repository owner but does not alter code."
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 5"
  },
  {
    "question": "Which GitHub feature is responsible for tracking dependencies and known vulnerabilities in those dependencies from an advisory database?",
    "options": [
      "Repository Insights",
      "Dependency Graph",
      "Security Policy",
      "CodeQL"
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 5"
  },
  {
    "question": "Which events from the audit log are exposed by the GraphQL API? Each answer presents a complete solution. (Choose three.)",
    "options": [
      "changes in permissions",
      "promoting users to administrators",
      "pushes to repositories",
      "changes to permissions of a GitHub App",
      "cloning of repositories"
    ],
    "correctAnswers": [
      0,
      1,
      3
    ],
    "topic": "Topic 5"
  },
  {
    "question": "When a token is used to perform actions across different GitHub resources, how is this reflected in audit logs?",
    "options": [
      "Each API action made with the token generates a separate audit log entry",
      "Only the first repository accessed is recorded",
      "GitHub creates a ZIP archive of all token activity",
      "The audit log stores only the token name and not its actions"
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 5"
  },
  {
    "question": "Which practice helps avoid service disruption when consuming GitHub APIs at scale?",
    "options": [
      "Designing your application to work within GitHub's rate limits",
      "Using multiple tokens to bypass limits",
      "Caching all API responses permanently",
      "Ignoring secondary rate limits"
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 5"
  },
  {
    "question": "How does GitHub handle secrets found via secret scanning in a public repository?",
    "options": [
      "It alerts the service provider (e.g., AWS, Stripe).",
      "It immediately blocks the commit to protect the secret.",
      "It deletes the secret from the repository automatically.",
      "It notifies the admin via webhook."
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 5"
  },
  {
    "question": "Our organization is updating its enterprise policies. Which of the following steps should you take to ensure alignment with security requirements?",
    "options": [
      "Maintain clear documentation of existing policies and policy changes.",
      "Implement the new enterprise policies across the organization first and then consult with the security team to identify any necessary adjustments or retrofits.",
      "Implement changes without consulting stakeholders.",
      "Regularly assess and adjust policies based on evolving risks."
    ],
    "correctAnswers": [
      0,
      3
    ],
    "topic": "Topic 5"
  },
  {
    "question": "Which of the following correctly describes the difference between controlling actions at the enterprise level versus the organization level in GitHub?",
    "options": [
      "Enterprise policies and organization policies are independent, with organization policies taking precedence for repositories within the organization.",
      "Enterprise policies configure mandatory settings for organizations.",
      "Enterprise policies apply only to public repositories, while organization policies apply to public, internal, and private repositories.",
      "Enterprise policies can block specific actions, while organization policies can only enable or disable actions entirely."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 5"
  },
  {
    "question": "What is the potential consequence of enabling multiple rulesets that apply to the same branch in a repository?",
    "options": [
      "Only organization-level rulesets are enforced over repository-level ones",
      "All applicable rulesets will be evaluated, and their combined rules enforced",
      "Only the most recently created ruleset will be enforced",
      "Rulesets will override each other, leading to unpredictable behavior"
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 5"
  },
  {
    "question": "In a GitHub repository using Dependabot, which of the following best describes the purpose of the .github/dependabot.yml file?",
    "options": [
      "It configures scheduling, package ecosystems, and target directories for update checks.",
      "It lists commit SHAs to exclude from automatic pull requests.",
      "It enables GitHub to scan for secrets in dependency files.",
      "It encrypts dependency versions before storing them in the repo."
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 5"
  },
  {
    "question": "What is the key benefit of using a GitHub security advisory within a repository?",
    "options": [
      "It automatically reverts commits that introduced the vulnerability.",
      "It allows maintainers to privately disclose, discuss, and publish vulnerabilities.",
      "It flags all forks of the repository as vulnerable.",
      "It prevents users from cloning the repository until issues are resolved."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 5"
  },
  {
    "question": "How does GitHub support compliance requirements for enterprises?",
    "options": [
      "GitHub provides configurable controls such as an audit log, SAML authentication, and enterprise rulesets.",
      "GitHub disables all external collaboration features.",
      "GitHub only allows those with repository owner (admin) permissions to write changes to repositories.",
      "GitHub automatically encrypts user passwords in plaintext for quick access."
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 5"
  },
  {
    "question": "You discover that a secret (e.g., a token or password) was accidentally committed to a GitHub repository. What is the first step you should take to mitigate the risk?",
    "options": [
      "Contact GitHub Support to remove the secret from all forks and clones of the repository.",
      "Revoke and/or rotate the secret to render it unusable, then assess whether history rewriting is necessary.",
      "Rewrite the repository history using git filter-repo or BFG Repo-Cleaner to remove the secret from all commits.",
      "Delete the repository and create a new one to ensure the secret is no longer accessible."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 5"
  },
  {
    "question": "Why would someone choose to configure a security policy?",
    "options": [
      "To communicate corporate security and compliance policies for end users on a private repository.",
      "To provide information on an open source repository for open source collaborators and researchers that may need to report and disclose sensitive security findings to maintainers securely.",
      "To prevent anyone from pushing to the repository without approval.",
      "To define which open source packages are permitted for use as part of that repository."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 5"
  },
  {
    "question": "How is CodeQL different from other static analysis tools?",
    "options": [
      "It removes insecure code automatically.",
      "It allows querying of code semantics using a database-like language.",
      "It only works for open-source projects.",
      "It runs analysis only after a security breach."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 5"
  },
  {
    "question": "Your enterprise has multiple organizations, and you want to ensure consistent security policies across all teams. Which feature should you use?",
    "options": [
      "Outside collaborators for all repositories.",
      "Organization-specific teams with custom policies.",
      "Enterprise-level teams with inherited enterprise policies.",
      "Assigning admin permissions to all team members."
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 5"
  },
  {
    "question": "What benefit does GitHub Advanced Security provide?",
    "options": [
      "helps organization administrators analyze and configure permissions to the least privilege required",
      "helps developers improve and maintain the security and quality of code",
      "helps enterprise administrators improve and maintain network security for their GitHub Enterprise Server instances",
      "helps organization administrators manage security tokens"
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 5"
  },
  {
    "question": "Which Git operation is not included in the Git activity audit log?",
    "options": [
      "Delete branch",
      "Fetch",
      "Push",
      "Clone"
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 5"
  },
  {
    "question": "You are an administrator and need to enforce a policy on forking private and internal repositories. Which options are available for configuring the policy at the enterprise level? (Each answer presents a complete solution. Choose three.)",
    "options": [
      "Allow organization owners to administer the setting at the organization level.",
      "Allow people who have access to private and internal repositories to fork these repositories.",
      "Allow specific people or teams to fork private and internal repositories.",
      "Disallow repository owners from administering the setting at the repository level.",
      "Disallow forking of private and internal repositories."
    ],
    "correctAnswers": [
      0,
      3,
      4
    ],
    "topic": "Topic 5"
  },
  {
    "question": "What additional capability does secret scanning offer for private repositories on GitHub Enterprise Cloud?",
    "options": [
      "Allows custom pattern definitions for internal secret formats.",
      "Disables any code that contains a secret.",
      "Rewrites history to remove secrets.",
      "Revokes GitHub access tokens automatically."
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 5"
  },
  {
    "question": "What is the first step when sensitive data is accidentally pushed to a public GitHub repository?",
    "options": [
      "Revoke any exposed credentials immediately",
      "Force push a commit removing the data",
      "Open an issue to inform users",
      "Delete the repository"
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 5"
  },
  {
    "question": "How does Dependabot determine which security update PRs to open?",
    "options": [
      "It waits for manual triage of all CVEs.",
      "It uses the dependency graph and Dependabot alerts to open PRs for patched versions.",
      "It reads the GitHub Issues and automatically suggests fixes.",
      "It compares your codebase to the GitHub Trending list."
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 5"
  },
  {
    "question": "Which of the following GitHub token types supports fine-grained repository permissions AND is recommended for CI/CD automation?",
    "options": [
      "Personal Access Tokens (PATs)",
      "GitHub App Installation Access Tokens",
      "Device Tokens",
      "OAuth tokens"
    ],
    "correctAnswers": [
      1
    ],
    "topic": "Topic 6"
  },
  {
    "question": "Which of the following accurately contrasts a GitHub App and a GitHub Action?",
    "options": [
      "GitHub Apps can only be used inside .github/workflows",
      "GitHub Actions are limited to reading repository content only",
      "GitHub Apps run only on GitHub-provided virtual machines, while GitHub Actions run only on customer-hosted machines",
      "GitHub Actions can only be used to respond to events within a single repository while GitHub Apps can respond to events from multiple repositories"
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 6"
  },
  {
    "question": "Which of the following are valid ways to pass data to a reusable workflow in a separate repository?",
    "options": [
      "Use environment variables to pass data directly to the reusable workflow.",
      "Define inputs in the reusable workflow and pass values from the calling workflow.",
      "Define the secrets in the caller repository and call the reusable workflow using the â€˜secretsâ€™ keyword.",
      "Define the secrets in the reusable workflow's repository and reference the secret using the â€˜secretsâ€™ context."
    ],
    "correctAnswers": [
      1,
      2
    ],
    "topic": "Topic 6"
  },
  {
    "question": "An organization wants to share a single API key required for their Actions workflows. They need to restrict its use to only a subset of repositories. Where should they configure the secrets to minimize maintenance?",
    "options": [
      "Repository secrets",
      "Environment secrets",
      "Organization secrets",
      "Development environment secrets"
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 6"
  },
  {
    "question": "Which feature is unique to self-hosted runners?",
    "options": [
      "Execute scripts before and after a job",
      "Dynamic scaling",
      "Automatic updates to the operating system",
      "GPU support"
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 6"
  },
  {
    "question": "What is the effect of enforcing a policy that restricts GitHub Actions to only those created by the enterprise?",
    "options": [
      "Marketplace actions are allowed only with SSO enabled",
      "Actions can only be triggered by organization members",
      "Only actions created within the enterprise are allowed",
      "All public actions are allowed"
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 6"
  },
  {
    "question": "You want to ensure a secret is automatically available to only workflows in internal and private repositories in the organization. Where do you configure the required access policy?",
    "options": [
      "Actions policies",
      "Runner groups",
      "Rulesets",
      "Organization secret"
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 6"
  },
  {
    "question": "What needs to be done to ensure that only specific repositories can access the runners in an organization runner group?",
    "options": [
      "Use GitHub's meta API to configure access.",
      "Add a label to the runner group.",
      "Configure repository access in the runner group settings.",
      "Configure the Actions Policies to \"Only selected repositories\"."
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 6"
  },
  {
    "question": "You are using GitHub-hosted runners and need to securely deploy to an internal system. The security team requires that these runners use IP address ranges that would not be shared with other companies. Which of the following approaches would meet their requirements?",
    "options": [
      "GitHub-hosted larger runners with Azure private networking",
      "GitHub-hosted standard runners, using the IP addresses provided in \"actions\" from https://api.github.com/meta",
      "GitHub-hosted standard runners, using the IP addresses provided in \"api\" from https://api.github.com/meta",
      "GitHub-hosted larger runners with static IP addresses"
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 6"
  },
  {
    "question": "Which factor affects GitHub Actions pricing for GitHub-hosted runners on GitHub Enterprise Cloud?",
    "options": [
      "Number of workflows defined in .github/workflows/",
      "Number of contributors to the repository Explanation:Incorrect. Contributor count does not impact billing for Actions",
      "Total number of repositories using Actions",
      "Operating system used in the runner environment"
    ],
    "correctAnswers": [
      3
    ],
    "topic": "Topic 6"
  },
  {
    "question": "You need GitHub to automatically notify a third-party service any time a new repository is created. You want to avoid writing custom code. The vendor has told you that they have a tool in the GitHub Marketplace. Which type of tool do you need?",
    "options": [
      "GitHub App",
      "GitHub Copilot Extension",
      "GitHub Models",
      "GitHub Action"
    ],
    "correctAnswers": [
      0
    ],
    "topic": "Topic 6"
  },
  {
    "question": "Which product's usage is not included in GitHub Enterprise Cloud's monthly metered billing report?",
    "options": [
      "Git LFS bandwidth",
      "GitHub Actions minutes",
      "GitHub Discussions engagement",
      "GitHub Packages storage"
    ],
    "correctAnswers": [
      2
    ],
    "topic": "Topic 7"
  }
]